<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" backgroundColor="#FFFFFF" >		
	<mx:states>
		<mx:State name="Realtime" >
			<mx:SetProperty target="terminaViewCanvas" name="visible" value="true" />			
		</mx:State>
		<mx:State name="Replay" >
			<mx:SetProperty target="terminaViewCanvas" name="visible" value="false" />
		</mx:State>
	</mx:states>
	<mx:Script>
	
		<![CDATA[
			import models.events.SliderSeekEvent;
		
			import models.utils.Logger;
			
			private var _cursorPosition:Number = 0;
			private var _updateTimerSpan:Number = 100 // milliseconds
			private var _percentagePerSpan:Number = 10;
			private var _timer:Timer;
			
			public static const REPLAY:String = "Replay";
			public static const REALTIME:String = "Realtime";
			
			/*
				This MXML dispatches SliderSeekEvent.
			*/
			private function onCreationComplete():void
			{
				setCurrentState("Realtime");
			}
			
			public function get canvas():Canvas
			{
				return terminalViewCanvas;
			}
			
			public function setMode(mode:String):void
			{
				switch(mode) {
					case REPLAY:
						setCurrentState("Replay");
						break;
					case REALTIME:
						setCurrentState("Realtime");
					default:
						Logger.log("undefined mode / TerminalView");
				}
			}
			
			public function sliderChanged():void
			{
				_timer.stop();
				var e:SliderSeekEvent = new SliderSeekEvent(slider.value);
				dispatchEvent(e);
				_timer.start();
			}
			
			
			public function autoProcess(updateTimerSpan:Number, percentagePerSpan:Number):void
			{
				_updateTimerSpan = updateTimerSpan;
				_percentagePerSpan = percentagePerSpan;
				_timer = new Timer(_updateTimerSpan); // call each interval
				_timer.addEventListener(TimerEvent.TIMER, this.updateSlider);
				_timer.start();
			}
			
			public function updateSlider(e:TimerEvent):void
			{
				var newv:Number = slider.value + _percentagePerSpan;
				seek(newv);
			}
			
			/*
				This class doesn not have to know the total time of the replay.
			*/
			public function seek(value:Number):void
			{
				if (value < 0 || value > 100) {
					_timer.stop();
					return;
				}
				slider.value = value;
			}
			
		]]>
	</mx:Script>
	<mx:VBox borderStyle="solid">
		<mx:Canvas id="terminalViewCanvas"  width="1200" height="700" visible="true" />
		<mx:HBox paddingLeft="200">
			<mx:HSlider width="800" id="slider" minimum="0" maximum="100"
				value="0" tickColor="black" change="sliderChanged();" />		
		</mx:HBox>
	</mx:VBox>
	
</mx:Canvas>

